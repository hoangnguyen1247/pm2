"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _child_process = require("child_process");

var DockerMgmt = {};

function execDocker(cmd, cb) {
  var i = (0, _child_process.spawn)('docker', cmd, {
    stdio: 'inherit',
    env: process.env,
    shell: true
  });
  i.on('close', cb);
}

DockerMgmt.processCommand = function (PM2, start_id, select_id, action, cb) {
  PM2.Client.executeRemote('getSystemData', {}, function (err, sys_infos) {
    if (sys_infos.containers && sys_infos.containers.length == 0) return cb(new Error("Process ".concat(select_id, " not found")));
    var container = sys_infos.containers[select_id - start_id - 1];
    if (action == 'stopProcessId') execDocker(['stop', container.id], cb);
    if (action == 'deleteProcessId') execDocker(['rm', container.id], cb);
    if (action == 'restartProcessId') execDocker(['restart', container.id], cb);
  });
};

var _default = DockerMgmt;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9BUEkvRXh0cmFNZ210L0RvY2tlci50cyJdLCJuYW1lcyI6WyJEb2NrZXJNZ210IiwiZXhlY0RvY2tlciIsImNtZCIsImNiIiwiaSIsInN0ZGlvIiwiZW52IiwicHJvY2VzcyIsInNoZWxsIiwib24iLCJwcm9jZXNzQ29tbWFuZCIsIlBNMiIsInN0YXJ0X2lkIiwic2VsZWN0X2lkIiwiYWN0aW9uIiwiQ2xpZW50IiwiZXhlY3V0ZVJlbW90ZSIsImVyciIsInN5c19pbmZvcyIsImNvbnRhaW5lcnMiLCJsZW5ndGgiLCJFcnJvciIsImNvbnRhaW5lciIsImlkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBQ0EsSUFBTUEsVUFBZSxHQUFHLEVBQXhCOztBQUVBLFNBQVNDLFVBQVQsQ0FBb0JDLEdBQXBCLEVBQXlCQyxFQUF6QixFQUE2QjtBQUMzQixNQUFJQyxDQUFDLEdBQUcsMEJBQU0sUUFBTixFQUFnQkYsR0FBaEIsRUFBcUI7QUFDM0JHLElBQUFBLEtBQUssRUFBRyxTQURtQjtBQUUzQkMsSUFBQUEsR0FBRyxFQUFFQyxPQUFPLENBQUNELEdBRmM7QUFHN0JFLElBQUFBLEtBQUssRUFBRztBQUhxQixHQUFyQixDQUFSO0FBTUFKLEVBQUFBLENBQUMsQ0FBQ0ssRUFBRixDQUFLLE9BQUwsRUFBY04sRUFBZDtBQUNEOztBQUVESCxVQUFVLENBQUNVLGNBQVgsR0FBNEIsVUFBU0MsR0FBVCxFQUFjQyxRQUFkLEVBQXdCQyxTQUF4QixFQUFtQ0MsTUFBbkMsRUFBMkNYLEVBQTNDLEVBQStDO0FBQ3pFUSxFQUFBQSxHQUFHLENBQUNJLE1BQUosQ0FBV0MsYUFBWCxDQUF5QixlQUF6QixFQUEwQyxFQUExQyxFQUE4QyxVQUFDQyxHQUFELEVBQU1DLFNBQU4sRUFBb0I7QUFDaEUsUUFBSUEsU0FBUyxDQUFDQyxVQUFWLElBQXdCRCxTQUFTLENBQUNDLFVBQVYsQ0FBcUJDLE1BQXJCLElBQStCLENBQTNELEVBQ0UsT0FBT2pCLEVBQUUsQ0FBQyxJQUFJa0IsS0FBSixtQkFBcUJSLFNBQXJCLGdCQUFELENBQVQ7QUFDRixRQUFJUyxTQUFTLEdBQUdKLFNBQVMsQ0FBQ0MsVUFBVixDQUFxQk4sU0FBUyxHQUFHRCxRQUFaLEdBQXVCLENBQTVDLENBQWhCO0FBQ0EsUUFBSUUsTUFBTSxJQUFJLGVBQWQsRUFDRWIsVUFBVSxDQUFDLENBQUMsTUFBRCxFQUFTcUIsU0FBUyxDQUFDQyxFQUFuQixDQUFELEVBQXlCcEIsRUFBekIsQ0FBVjtBQUNGLFFBQUlXLE1BQU0sSUFBSSxpQkFBZCxFQUNFYixVQUFVLENBQUMsQ0FBQyxJQUFELEVBQU9xQixTQUFTLENBQUNDLEVBQWpCLENBQUQsRUFBdUJwQixFQUF2QixDQUFWO0FBQ0YsUUFBSVcsTUFBTSxJQUFJLGtCQUFkLEVBQ0ViLFVBQVUsQ0FBQyxDQUFDLFNBQUQsRUFBWXFCLFNBQVMsQ0FBQ0MsRUFBdEIsQ0FBRCxFQUE0QnBCLEVBQTVCLENBQVY7QUFDSCxHQVZEO0FBV0QsQ0FaRDs7ZUFjZUgsVSIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgc3Bhd24gfSBmcm9tICdjaGlsZF9wcm9jZXNzJztcbmNvbnN0IERvY2tlck1nbXQ6IGFueSA9IHt9XG5cbmZ1bmN0aW9uIGV4ZWNEb2NrZXIoY21kLCBjYikge1xuICB2YXIgaSA9IHNwYXduKCdkb2NrZXInLCBjbWQsIHtcbiAgICBzdGRpbyA6ICdpbmhlcml0JyxcbiAgICBlbnY6IHByb2Nlc3MuZW52LFxuXHRcdHNoZWxsIDogdHJ1ZVxuICB9KVxuXG4gIGkub24oJ2Nsb3NlJywgY2IpXG59XG5cbkRvY2tlck1nbXQucHJvY2Vzc0NvbW1hbmQgPSBmdW5jdGlvbihQTTIsIHN0YXJ0X2lkLCBzZWxlY3RfaWQsIGFjdGlvbiwgY2IpIHtcbiAgUE0yLkNsaWVudC5leGVjdXRlUmVtb3RlKCdnZXRTeXN0ZW1EYXRhJywge30sIChlcnIsIHN5c19pbmZvcykgPT4ge1xuICAgIGlmIChzeXNfaW5mb3MuY29udGFpbmVycyAmJiBzeXNfaW5mb3MuY29udGFpbmVycy5sZW5ndGggPT0gMClcbiAgICAgIHJldHVybiBjYihuZXcgRXJyb3IoYFByb2Nlc3MgJHtzZWxlY3RfaWR9IG5vdCBmb3VuZGApKVxuICAgIHZhciBjb250YWluZXIgPSBzeXNfaW5mb3MuY29udGFpbmVyc1tzZWxlY3RfaWQgLSBzdGFydF9pZCAtIDFdXG4gICAgaWYgKGFjdGlvbiA9PSAnc3RvcFByb2Nlc3NJZCcpXG4gICAgICBleGVjRG9ja2VyKFsnc3RvcCcsIGNvbnRhaW5lci5pZF0sIGNiKVxuICAgIGlmIChhY3Rpb24gPT0gJ2RlbGV0ZVByb2Nlc3NJZCcpXG4gICAgICBleGVjRG9ja2VyKFsncm0nLCBjb250YWluZXIuaWRdLCBjYilcbiAgICBpZiAoYWN0aW9uID09ICdyZXN0YXJ0UHJvY2Vzc0lkJylcbiAgICAgIGV4ZWNEb2NrZXIoWydyZXN0YXJ0JywgY29udGFpbmVyLmlkXSwgY2IpXG4gIH0pXG59XG5cbmV4cG9ydCBkZWZhdWx0IERvY2tlck1nbXRcbiJdfQ==