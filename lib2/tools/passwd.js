"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _fs = _interopRequireDefault(require("fs"));

var getUsers = function getUsers() {
  return _fs["default"].readFileSync('/etc/passwd').toString().split('\n').filter(function (user) {
    return user.length && user[0] != '#';
  }).reduce(function (map, user) {
    var fields = user.split(':');
    map[fields[0]] = map[fields[2]] = {
      username: fields[0],
      password: fields[1],
      userId: fields[2],
      groupId: fields[3],
      name: fields[4].split(',')[0],
      homedir: fields[5],
      shell: fields[6]
    };
    return map;
  }, {});
};

var getGroups = function getGroups(cb) {
  var groups;

  try {
    groups = _fs["default"].readFileSync('/etc/group');
  } catch (e) {
    return e;
  }

  return groups.toString().split('\n').filter(function (group) {
    return group.length && group[0] != '#';
  }).reduce(function (map, group) {
    var fields = group.split(':');
    map[fields[0]] = map[fields[2]] = {
      name: fields[0],
      password: fields[1],
      id: fields[2],
      members: fields[3].split(',')
    };
    return map;
  }, {});
};

var _default = {
  getUsers: getUsers,
  getGroups: getGroups
};
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90b29scy9wYXNzd2QudHMiXSwibmFtZXMiOlsiZ2V0VXNlcnMiLCJmcyIsInJlYWRGaWxlU3luYyIsInRvU3RyaW5nIiwic3BsaXQiLCJmaWx0ZXIiLCJ1c2VyIiwibGVuZ3RoIiwicmVkdWNlIiwibWFwIiwiZmllbGRzIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsInVzZXJJZCIsImdyb3VwSWQiLCJuYW1lIiwiaG9tZWRpciIsInNoZWxsIiwiZ2V0R3JvdXBzIiwiY2IiLCJncm91cHMiLCJlIiwiZ3JvdXAiLCJpZCIsIm1lbWJlcnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUNBOztBQUVBLElBQUlBLFFBQVEsR0FBRyxTQUFYQSxRQUFXLEdBQVc7QUFDeEIsU0FBT0MsZUFBR0MsWUFBSCxDQUFnQixhQUFoQixFQUNKQyxRQURJLEdBRUpDLEtBRkksQ0FFRSxJQUZGLEVBR0pDLE1BSEksQ0FHRyxVQUFVQyxJQUFWLEVBQWdCO0FBQ3RCLFdBQU9BLElBQUksQ0FBQ0MsTUFBTCxJQUFlRCxJQUFJLENBQUMsQ0FBRCxDQUFKLElBQVcsR0FBakM7QUFDRCxHQUxJLEVBTUpFLE1BTkksQ0FNRyxVQUFTQyxHQUFULEVBQWNILElBQWQsRUFBb0I7QUFDMUIsUUFBSUksTUFBTSxHQUFHSixJQUFJLENBQUNGLEtBQUwsQ0FBVyxHQUFYLENBQWI7QUFFQUssSUFBQUEsR0FBRyxDQUFDQyxNQUFNLENBQUMsQ0FBRCxDQUFQLENBQUgsR0FBaUJELEdBQUcsQ0FBQ0MsTUFBTSxDQUFDLENBQUQsQ0FBUCxDQUFILEdBQWlCO0FBQ2hDQyxNQUFBQSxRQUFRLEVBQUdELE1BQU0sQ0FBQyxDQUFELENBRGU7QUFFaENFLE1BQUFBLFFBQVEsRUFBR0YsTUFBTSxDQUFDLENBQUQsQ0FGZTtBQUdoQ0csTUFBQUEsTUFBTSxFQUFHSCxNQUFNLENBQUMsQ0FBRCxDQUhpQjtBQUloQ0ksTUFBQUEsT0FBTyxFQUFHSixNQUFNLENBQUMsQ0FBRCxDQUpnQjtBQUtoQ0ssTUFBQUEsSUFBSSxFQUFHTCxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVVOLEtBQVYsQ0FBZ0IsR0FBaEIsRUFBcUIsQ0FBckIsQ0FMeUI7QUFNaENZLE1BQUFBLE9BQU8sRUFBR04sTUFBTSxDQUFDLENBQUQsQ0FOZ0I7QUFPaENPLE1BQUFBLEtBQUssRUFBR1AsTUFBTSxDQUFDLENBQUQ7QUFQa0IsS0FBbEM7QUFVQSxXQUFPRCxHQUFQO0FBQ0QsR0FwQkksRUFvQkYsRUFwQkUsQ0FBUDtBQXFCRCxDQXRCRDs7QUF3QkEsSUFBSVMsU0FBUyxHQUFHLFNBQVpBLFNBQVksQ0FBU0MsRUFBVCxFQUFjO0FBQzVCLE1BQUlDLE1BQUo7O0FBRUEsTUFBSTtBQUNGQSxJQUFBQSxNQUFNLEdBQUduQixlQUFHQyxZQUFILENBQWdCLFlBQWhCLENBQVQ7QUFDRCxHQUZELENBRUUsT0FBTW1CLENBQU4sRUFBUztBQUNULFdBQU9BLENBQVA7QUFDRDs7QUFFRCxTQUFPRCxNQUFNLENBQ1ZqQixRQURJLEdBRUpDLEtBRkksQ0FFRSxJQUZGLEVBR0pDLE1BSEksQ0FHRyxVQUFVaUIsS0FBVixFQUFpQjtBQUN2QixXQUFPQSxLQUFLLENBQUNmLE1BQU4sSUFBZ0JlLEtBQUssQ0FBQyxDQUFELENBQUwsSUFBWSxHQUFuQztBQUNELEdBTEksRUFNSmQsTUFOSSxDQU1HLFVBQVNDLEdBQVQsRUFBY2EsS0FBZCxFQUFxQjtBQUMzQixRQUFJWixNQUFNLEdBQUdZLEtBQUssQ0FBQ2xCLEtBQU4sQ0FBWSxHQUFaLENBQWI7QUFDQUssSUFBQUEsR0FBRyxDQUFDQyxNQUFNLENBQUMsQ0FBRCxDQUFQLENBQUgsR0FBaUJELEdBQUcsQ0FBQ0MsTUFBTSxDQUFDLENBQUQsQ0FBUCxDQUFILEdBQWlCO0FBQ2hDSyxNQUFBQSxJQUFJLEVBQUdMLE1BQU0sQ0FBQyxDQUFELENBRG1CO0FBRWhDRSxNQUFBQSxRQUFRLEVBQUdGLE1BQU0sQ0FBQyxDQUFELENBRmU7QUFHaENhLE1BQUFBLEVBQUUsRUFBR2IsTUFBTSxDQUFDLENBQUQsQ0FIcUI7QUFJaENjLE1BQUFBLE9BQU8sRUFBR2QsTUFBTSxDQUFDLENBQUQsQ0FBTixDQUFVTixLQUFWLENBQWdCLEdBQWhCO0FBSnNCLEtBQWxDO0FBTUEsV0FBT0ssR0FBUDtBQUNELEdBZkksRUFlRixFQWZFLENBQVA7QUFnQkQsQ0F6QkQ7O2VBMkJlO0FBQ2JULEVBQUFBLFFBQVEsRUFBUkEsUUFEYTtBQUVia0IsRUFBQUEsU0FBUyxFQUFUQTtBQUZhLEMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCBmcyBmcm9tICdmcydcblxudmFyIGdldFVzZXJzID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBmcy5yZWFkRmlsZVN5bmMoJy9ldGMvcGFzc3dkJylcbiAgICAudG9TdHJpbmcoKVxuICAgIC5zcGxpdCgnXFxuJylcbiAgICAuZmlsdGVyKGZ1bmN0aW9uICh1c2VyKSB7XG4gICAgICByZXR1cm4gdXNlci5sZW5ndGggJiYgdXNlclswXSAhPSAnIyc7XG4gICAgfSlcbiAgICAucmVkdWNlKGZ1bmN0aW9uKG1hcCwgdXNlcikge1xuICAgICAgdmFyIGZpZWxkcyA9IHVzZXIuc3BsaXQoJzonKTtcblxuICAgICAgbWFwW2ZpZWxkc1swXV0gPSBtYXBbZmllbGRzWzJdXSA9IHtcbiAgICAgICAgdXNlcm5hbWUgOiBmaWVsZHNbMF0sXG4gICAgICAgIHBhc3N3b3JkIDogZmllbGRzWzFdLFxuICAgICAgICB1c2VySWQgOiBmaWVsZHNbMl0sXG4gICAgICAgIGdyb3VwSWQgOiBmaWVsZHNbM10sXG4gICAgICAgIG5hbWUgOiBmaWVsZHNbNF0uc3BsaXQoJywnKVswXSxcbiAgICAgICAgaG9tZWRpciA6IGZpZWxkc1s1XSxcbiAgICAgICAgc2hlbGwgOiBmaWVsZHNbNl1cbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBtYXBcbiAgICB9LCB7fSlcbn1cblxudmFyIGdldEdyb3VwcyA9IGZ1bmN0aW9uKGNiPykge1xuICB2YXIgZ3JvdXBzXG5cbiAgdHJ5IHtcbiAgICBncm91cHMgPSBmcy5yZWFkRmlsZVN5bmMoJy9ldGMvZ3JvdXAnKVxuICB9IGNhdGNoKGUpIHtcbiAgICByZXR1cm4gZVxuICB9XG5cbiAgcmV0dXJuIGdyb3Vwc1xuICAgIC50b1N0cmluZygpXG4gICAgLnNwbGl0KCdcXG4nKVxuICAgIC5maWx0ZXIoZnVuY3Rpb24gKGdyb3VwKSB7XG4gICAgICByZXR1cm4gZ3JvdXAubGVuZ3RoICYmIGdyb3VwWzBdICE9ICcjJztcbiAgICB9KVxuICAgIC5yZWR1Y2UoZnVuY3Rpb24obWFwLCBncm91cCkge1xuICAgICAgdmFyIGZpZWxkcyA9IGdyb3VwLnNwbGl0KCc6Jyk7XG4gICAgICBtYXBbZmllbGRzWzBdXSA9IG1hcFtmaWVsZHNbMl1dID0ge1xuICAgICAgICBuYW1lIDogZmllbGRzWzBdLFxuICAgICAgICBwYXNzd29yZCA6IGZpZWxkc1sxXSxcbiAgICAgICAgaWQgOiBmaWVsZHNbMl0sXG4gICAgICAgIG1lbWJlcnMgOiBmaWVsZHNbM10uc3BsaXQoJywnKVxuICAgICAgfTtcbiAgICAgIHJldHVybiBtYXA7XG4gICAgfSwge30pXG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZ2V0VXNlcnMsXG4gIGdldEdyb3Vwc1xufVxuIl19